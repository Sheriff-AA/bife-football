# Generated by Django 4.2.10 on 2024-05-12 11:12

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_coach', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_player', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_date', models.DateField(default=datetime.date.today)),
            ],
            options={
                'ordering': ['-contract_date'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateTimeField()),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('is_fixture', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('shirt_number', models.IntegerField()),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('age', models.IntegerField(default=0)),
                ('position', models.CharField(blank=True, choices=[('CB', 'Centre Back'), ('LCB', 'Left Centre Back'), ('RCB', 'Right Centre Back'), ('RB', 'Right Back'), ('LB', 'Left Back'), ('CM', 'Center Midfield'), ('CAM', 'Center Attacking Midfield'), ('LAM', 'Left Attacking Midfield'), ('RAM', 'Right Attacking Midfield'), ('LWB', 'Left Wing Back'), ('RWB', 'Right Wing Back'), ('ST', 'Striker'), ('LW', 'Left Wing'), ('RW', 'Right Wing')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=80, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('short_team_name', models.CharField(max_length=3, unique=True)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_hometeam', models.IntegerField()),
                ('score_awayteam', models.IntegerField()),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='players.match')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('minutes_played', models.IntegerField(choices=[(1, "1'"), (2, "2'"), (3, "3'"), (4, "4'"), (5, "5'"), (6, "6'"), (7, "7'"), (8, "8'"), (9, "9'"), (10, "10'"), (11, "11'"), (12, "12'"), (13, "13'"), (14, "14'"), (15, "15'"), (16, "16'"), (17, "17'"), (18, "18'"), (19, "19'"), (20, "20'"), (21, "21'"), (22, "22'"), (23, "23'"), (24, "24'"), (25, "25'"), (26, "26'"), (27, "27'"), (28, "28'"), (29, "29'"), (30, "30'"), (31, "31'"), (32, "32'"), (33, "33'"), (34, "34'"), (35, "35'"), (36, "36'"), (37, "37'"), (38, "38'"), (39, "39'"), (40, "40'"), (41, "41'"), (42, "42'"), (43, "43'"), (44, "44'"), (45, "45'"), (46, "46'"), (47, "47'"), (48, "48'"), (49, "49'"), (50, "50'"), (51, "51'"), (52, "52'"), (53, "53'"), (54, "54'"), (55, "55'"), (56, "56'"), (57, "57'"), (58, "58'"), (59, "59'"), (60, "60'"), (61, "61'"), (62, "62'"), (63, "63'"), (64, "64'"), (65, "65'"), (66, "66'"), (67, "67'"), (68, "68'"), (69, "69'"), (70, "70'"), (71, "71'"), (72, "72'"), (73, "73'"), (74, "74'"), (75, "75'"), (76, "76'"), (77, "77'"), (78, "78'"), (79, "79'"), (80, "80'"), (81, "81'"), (82, "82'"), (83, "83'"), (84, "84'"), (85, "85'"), (86, "86'"), (87, "87'"), (88, "88'"), (89, "89'"), (90, "90'"), (91, "91'"), (92, "92'"), (93, "93'"), (94, "94'"), (95, "95'"), (96, "96'"), (97, "97'"), (98, "98'"), (99, "99'"), (100, "100'"), (101, "101'"), (102, "102'"), (103, "103'"), (104, "104'"), (105, "105'"), (106, "106'"), (107, "107'"), (108, "108'"), (109, "109'"), (110, "110'"), (111, "111'"), (112, "112'"), (113, "113'"), (114, "114'"), (115, "115'"), (116, "116'"), (117, "117'"), (118, "118'"), (119, "119'"), (120, "120'")])),
                ('rating', models.DecimalField(decimal_places=2, max_digits=5)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='players.player')),
                ('player_contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='players.contract')),
            ],
            options={
                'unique_together': {('player_contract', 'match')},
            },
        ),
        migrations.AddField(
            model_name='player',
            name='matches',
            field=models.ManyToManyField(through='players.PlayerStat', to='players.match'),
        ),
        migrations.AddField(
            model_name='player',
            name='teams',
            field=models.ManyToManyField(through='players.Contract', to='players.team'),
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MatchEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('GOAL', 'Goal'), ('ASSIST', 'Assist'), ('YELLOW_CARD', 'Yellow Card'), ('RED_CARD', 'Red Card'), ('SUBSTITUTION', 'Substitution'), ('HALFTIME', 'Halftime'), ('FULLTIME', 'Fulltime')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('minute', models.PositiveSmallIntegerField(choices=[(1, "1'"), (2, "2'"), (3, "3'"), (4, "4'"), (5, "5'"), (6, "6'"), (7, "7'"), (8, "8'"), (9, "9'"), (10, "10'"), (11, "11'"), (12, "12'"), (13, "13'"), (14, "14'"), (15, "15'"), (16, "16'"), (17, "17'"), (18, "18'"), (19, "19'"), (20, "20'"), (21, "21'"), (22, "22'"), (23, "23'"), (24, "24'"), (25, "25'"), (26, "26'"), (27, "27'"), (28, "28'"), (29, "29'"), (30, "30'"), (31, "31'"), (32, "32'"), (33, "33'"), (34, "34'"), (35, "35'"), (36, "36'"), (37, "37'"), (38, "38'"), (39, "39'"), (40, "40'"), (41, "41'"), (42, "42'"), (43, "43'"), (44, "44'"), (45, "45'"), (46, "46'"), (47, "47'"), (48, "48'"), (49, "49'"), (50, "50'"), (51, "51'"), (52, "52'"), (53, "53'"), (54, "54'"), (55, "55'"), (56, "56'"), (57, "57'"), (58, "58'"), (59, "59'"), (60, "60'"), (61, "61'"), (62, "62'"), (63, "63'"), (64, "64'"), (65, "65'"), (66, "66'"), (67, "67'"), (68, "68'"), (69, "69'"), (70, "70'"), (71, "71'"), (72, "72'"), (73, "73'"), (74, "74'"), (75, "75'"), (76, "76'"), (77, "77'"), (78, "78'"), (79, "79'"), (80, "80'"), (81, "81'"), (82, "82'"), (83, "83'"), (84, "84'"), (85, "85'"), (86, "86'"), (87, "87'"), (88, "88'"), (89, "89'"), (90, "90'"), (91, "91'"), (92, "92'"), (93, "93'"), (94, "94'"), (95, "95'"), (96, "96'"), (97, "97'"), (98, "98'"), (99, "99'"), (100, "100'"), (101, "101'"), (102, "102'"), (103, "103'"), (104, "104'"), (105, "105'"), (106, "106'"), (107, "107'"), (108, "108'"), (109, "109'"), (110, "110'"), (111, "111'"), (112, "112'"), (113, "113'"), (114, "114'"), (115, "115'"), (116, "116'"), (117, "117'"), (118, "118'"), (119, "119'"), (120, "120'")])),
                ('is_own_goal', models.BooleanField(default=False)),
                ('is_penalty', models.BooleanField(default=False)),
                ('is_second_yellow_card', models.BooleanField(default=False)),
                ('is_direct_red_card', models.BooleanField(default=False)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.match')),
                ('player_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.contract')),
                ('related_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_events', to='players.contract')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='players.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='players.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='players.venue'),
        ),
        migrations.AddField(
            model_name='contract',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player'),
        ),
        migrations.AddField(
            model_name='contract',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.team'),
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coach', to='players.team')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='match',
            unique_together={('home_team', 'away_team', 'match_date')},
        ),
        migrations.CreateModel(
            name='CustomMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versus_team', models.CharField(max_length=40)),
                ('date', models.DateTimeField()),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('is_fixture', models.BooleanField(default=True)),
                ('is_home', models.BooleanField(default=True)),
                ('user_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_matches', to='players.team')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='players.venue')),
            ],
            options={
                'unique_together': {('versus_team', 'user_team', 'date')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='contract',
            unique_together={('player', 'team', 'contract_date')},
        ),
    ]
